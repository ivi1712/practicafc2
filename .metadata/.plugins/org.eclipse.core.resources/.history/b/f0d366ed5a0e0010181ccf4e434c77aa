/*---------------------------------------------------------------------
**
**  Fichero:
**    fun_asm.asm  01/05/2025
**
**    (c) J.M. Mendias
**    Fundamentos de Computadores II
**    Facultad de Inform치tica. Universidad Complutense de Madrid
**
**  Prop칩sito:
**    Fichero de c칩digo para la pr치ctica 5
**
**-------------------------------------------------------------------*/

.data
.text

.extern _stack

/*
void matrixCopy(int n, int x[n][n], int z[n][n]) {
 for (int i = 0; i < n; i++)
 for (int j = 0; j < n; j++)
 z[i][j] = x[i][j];
}
*/

matrix_copy:
	li t0, 0 // t0 = i

for_f_mc:
	bge t0, a0, end_f_for_mc
	li t1, 0 // t1 = j
for_s_mc:
	bge t1, a0, end_s_for_mc
	mul t2, t0, a0 // i * n
    add t2, t2, t1 // i * n + j
    slli t2, t2, 2 // (i * n + j) * 4
    add t3, a2, t2  // z[i][j] adress
    add t4, a1, t2 // x[i][j] adress
    lw t4,0(t4) // valor x[i][j]
    sw t4, 0(t3) // z[i][j] = x[i][j]
    addi t1, t1, 1
    j for_s_mc
end_s_for_mc:
	addi t0, t0, 1
	j for_f_mc
end_for_f_mc:
	ret

matrix_mul:
	li t0, 0 // t0 = i

for_f_mm:
	bge t0, a0, end_f_for_mm
	li t1, 0 // t1 = j
for_s_mm:
	bge t1, a0, end_s_for_mm
	mul t2, t0, a0 // i * n
    add t2, t2, t1 // i * n + j
    slli t2, t2, 2 // (i * n + j) * 4
    add t3, a2, t2  // z[i][j] adress
    sw zero, 0(t3) // z[i][j] = 0
	li t4, 0 // t4 = k
for_t_mm:
	bge t4, a0, end_t_for_mm
	lw t5, 0(t3) // valor z[i][j]
	lw 			 // valor c[i][j]
	sw ,0(t3)
    //add t4, a1, t2 // x[i][j] adress
end_t_for_mm:
	addi t1, t1, 1 // j++
	j for_s_mm
end_s_for_mm:
	addi t0, t0, 1 // i++
	j for_f_mm
end_f_for_mm:
	ret


main:
	la sp , _stack
